buildscript {
    repositories {
        maven { url 'https://repo1.maven.org/maven2' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.0.1'
    }
}

apply plugin: 'com.android.library'

task wrapper(type: Wrapper) {
    gradleVersion = '1.10'
}

repositories {
    mavenCentral()
}

dependencies {
    compile('com.google.code.gson:gson:2.3')
    compile('org.apache.directory.studio:org.apache.commons.io:2.4')
    compile('com.github.wendykierp:JTransforms:3.0')
<<<<<<< HEAD
    compile('com.android.support:appcompat-v7:21.0.3')
=======
    compile('com.android.support:appcompat-v7:19.1.0')
>>>>>>> 051ae947630fcfb0d3676026f34c5e3e47dda23e
}

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        minSdkVersion 11
        targetSdkVersion 21
    }
    sourceSets {
        main {
            jniLibs.srcDir 'src/main/libs'
            jni.srcDirs = [] //disable automatic ndk-build call
            java {
                srcDir 'src/main/java'
            }
        }
    }

    task ndkBuild(type: Exec) {
        commandLine '/opt/android_ndk/r9d/ndk-build', '-C', file('src/main').absolutePath
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkBuild
    }
}


task clearJar(type: Delete) {
    delete buildDir.toString() + '/wit-android-sdk.zip';
}

task jar(type: Copy) {
    from('build/intermediates/bundles/release/')
    into buildDir
    include('classes.jar')
    rename ('classes.jar', 'wit.sdk.jar')
}

jar.dependsOn(clearJar, build)



task buildzip(type:Zip) {
    includeEmptyDirs = false
    from ('src/main/res')
    include ('drawable-hdpi/custom_button.xml', 'drawable-hdpi/microphone.png', 'layout/wit_button.xml')
    from (buildDir)
    include('wit.sdk.jar')
    from (buildDir.toString() + '/intermediates/bundles/release/')
    include('jni/')
    into 'res' // note that this specifies path *in* the archive
    eachFile { fileCopyDetails ->
        fileCopyDetails.path = fileCopyDetails.path.replaceFirst("jni", "jniLibs")
    }
    destinationDir buildDir
    archiveName 'wit-android-sdk.zip'

}
buildzip.dependsOn(jar);
